import { SetupContext, VNodeChild } from 'vue';
export interface TransBtnProps {
    class: string;
    customizeIcon: VNodeChild | ((props?: any) => VNodeChild);
    customizeIconProps?: any;
    onMousedown?: (payload: MouseEvent) => void;
    onClick?: (payload: MouseEvent) => void;
}
declare const TransBtn: {
    (props: TransBtnProps, { slots }: SetupContext): JSX.Element;
    inheritAttrs: boolean;
    props: {
        class: import("vue-types").VueTypeValidableDef<string> & {
            default: string;
        };
        customizeIcon: import("vue-types").VueTypeValidableDef<any>;
        customizeIconProps: import("vue-types").VueTypeValidableDef<any>;
        onMousedown: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
            default: (...args: any[]) => any;
        };
        onClick: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
            default: (...args: any[]) => any;
        };
    };
};
export default TransBtn;
